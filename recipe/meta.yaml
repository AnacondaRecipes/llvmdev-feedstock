{% set version = "15.0.7" %}
{% set major_ver = version.split(".")[0] %}

package:
  name: llvm-package
  version: {{ version }}

source:
  url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(".rc", "-rc") }}/llvm-project-{{ version.replace(".rc", "rc") }}.src.tar.xz
  sha256: 8b5fcb24b4128cf04df1b0b9410ce8b1a729cb3c544e6da885d234280dedeac6
  patches:
    - patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch
    # backport of zlib patches, can be dropped for v>=16.0.0, see
    # https://reviews.llvm.org/D135457 & https://reviews.llvm.org/D136065
    - patches/0002-CMake-Fix-Findzstd-module-for-shared-DLL-on-Windows.patch
    # clear-gotoffsetmap.patch applies to v<17.0.0
    - patches/clear-gotoffsetmap.patch
    - patches/no-windows-symlinks.patch
    # LLVM > 14 does not properly set the build order on OSX when making the C bindings library. This results in an
    # error where libllvm-c.dylib needs to link against libllvm.dylib; however, libllvm.dylib is a symlink to
    # libllvm-<major_version>.dylib and is not created until later on in the build process.
    # https://github.com/llvm/llvm-project/issues/64657
    - patches/osx_ver.patch
    - patches/llvm15-remove-use-of-clonefile.patch
    - patches/llvm15-svml.patch
    - patches/compiler-rt-cfi-startproc-war.patch
    - patches/compiler-rt-macos-build.patch

build:
  number: 3
  merge_build_host: false

requirements:
  build:
    - {{ compiler('cxx') }}
    - cmake
    - ninja
    - python >=3
    - libcxx {{ cxx_compiler_version }}  # [osx]
    - make                               # [not win]
    - patch                              # [not win]
    - git                                # [unix]
    - m2-git                             # [win]
    - m2-coreutils                       # [win]
    - m2-make                            # [win]
    - m2-patch                           # [win]
    - m2-grep                            # [win]
    - m2-sed                             # [win]
    - m2-patch                           # [win]
  host:
    - libcxx {{ cxx_compiler_version }}  # [osx]
    - libffi {{ libffi }}                # [unix]
    - libxml2 2.10.3
    - zlib {{ zlib }}
    - zstd {{ zstd }}

outputs:
  # Contains everything
  - name: llvmdev
    script: install_llvm.sh   # [not win]
    script: install_llvm.bat  # [win]
    build:
      activate_in_script: true
      missing_dso_whitelist:  # [s390x]
        - '$RPATH/ld64.so.1'  # [s390x]
    requirements:
      build:
        - {{ compiler('cxx') }}
        - cmake
        - ninja
        - python >=3
      host:
        - {{ pin_subpackage("libllvm" + major_ver, exact=True) }}
        - {{ pin_subpackage("llvm-tools", exact=True) }}
        - zlib {{ zlib }}
        - zstd {{ zstd }}
      run:
        - {{ pin_subpackage("libllvm" + major_ver, exact=True) }}
        - {{ pin_subpackage("llvm-tools", exact=True) }}
        - libcxx >={{ cxx_compiler_version }}  # [osx]
    test:
      commands:
        - $PREFIX/bin/llvm-config --libs                                # [not win]
        - test -f $PREFIX/include/llvm/Pass.h                           # [not win]
        - test -f $PREFIX/lib/libLLVMCore.a                             # [not win]
        - $PREFIX/libexec/llvm/not false                                # [not win]
        - $PREFIX/bin/llvm-nm --help                                    # [not win]
        - if not exist %LIBRARY_INC%\\llvm\\Pass.h exit 1               # [win]
        - if not exist "%LIBRARY_PREFIX%"\\libexec\llvm\not.exe exit 1  # [win]
        - if not exist "%LIBRARY_BIN%"\\llvm-nm.exe exit 1              # [win]
        - llvm-nm.exe --help                                            # [win]

  # Contains the shared libraries. To make different LLVM libraries co-installable
  # soversion is appended to the package name.
  - name: libllvm{{ major_ver }}
    script: install_llvm.sh  # [not win]
    build:
      activate_in_script: true
      run_exports:                                                    # [not win]
        - {{ pin_subpackage("libllvm" + major_ver, max_pin="x.x") }}  # [not win]
      missing_dso_whitelist:                                          # [s390x]
        - '$RPATH/ld64.so.1'                                          # [s390x]
    requirements:
      build:
        - {{ compiler('cxx') }}
        - ninja                  # [not win]
        - cmake                  # [not win]
        - python >=3             # [not win]
      host:
        - libcxx >={{ cxx_compiler_version }}  # [osx]
        - libffi {{ libffi }}                  # [unix]
        - libxml2 2.10.3
        - zlib {{ zlib }}
        - zstd {{ zstd }}
      run:
        - libcxx >={{ cxx_compiler_version }}  # [osx]
    test:
      commands:
        - test -f $PREFIX/lib/libLLVM-{{ major_ver }}${SHLIB_EXT}  # [not win]

  # This is a meta package so that people can use the latest libllvm and also
  # for run_exports
  - name: llvm
    build:
      run_exports:                                                    # [not win]
        - {{ pin_subpackage("libllvm" + major_ver, max_pin="x.x") }}  # [not win]
    requirements:
      build:
      host:
        - {{ pin_subpackage("libllvm" + major_ver, exact=True) }}  # [not win]
        - zlib {{ zlib }}
        - zstd {{ zstd }}
      run:                                                         # [not win]
        - {{ pin_subpackage("libllvm" + major_ver, exact=True) }}  # [not win]
      run_constrained:                                             # [not win]
        - llvmdev   {{ version }}                                  # [not win]
    test:
      commands:
        - echo "Hello World!"

  # Contains LLVM tools
  - name: llvm-tools
    script: install_llvm.sh   # [not win]
    script: install_llvm.bat  # [win]
    build:
      activate_in_script: true
      missing_dso_whitelist:  # [s390x]
        - '$RPATH/ld64.so.1'  # [s390x]
    requirements:
      build:
        - {{ compiler('cxx') }}
        - cmake
        - ninja
        - python >=3
      host:
        - {{ pin_subpackage("libllvm" + major_ver, exact=True) }}
        - libxml2 2.10.3  # [win]
        - zlib {{ zlib }}
        - zstd {{ zstd }}
      run:
        - {{ pin_subpackage("libllvm" + major_ver, exact=True) }}
        - libcxx >={{ cxx_compiler_version }}  # [osx]
      run_constrained:
        - llvmdev   {{ version }}
    test:
      commands:
        - $PREFIX/bin/llc -version                      # [not win]
        - if not exist "%LIBRARY_BIN%"\\llc.exe exit 1  # [win]
        - llc -version                                  # [win]

  - name: lit
    build:
      script: python -m pip install llvm/utils/lit --no-deps --no-build-isolation -vv
      activate_in_script: true
      skip: true  # [py<30]
      entry_points:
        - lit = lit.main:main
      missing_dso_whitelist:  # [s390x]
        - '$RPATH/ld64.so.1'  # [s390x]
    requirements:
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
    test:
      requires:
        - pip
      imports:
        - lit
      commands:
        - pip check
        - lit -h

about:
  home: https://llvm.org/
  license: Apache-2.0 WITH LLVM-exception
  license_file: llvm/LICENSE.TXT
  license_family: Apache
  summary: Development headers and libraries for LLVM
  description: |
    LLVM is a collection of libraries and tools that make it easy to build compilers, optimizers, just-in-time code
    generators, and many other compiler-related programs.
    LLVM uses a single, language-independent virtual instruction set both as an offline code representation (to
    communicate code between compiler phases and to run-time systems) and as the compiler internal representation (to
    analyze and transform programs). This persistent code representation allows a common set of sophisticated compiler
    techniques to be applied at compile-time, link-time, install-time, run-time, or "idle-time" (between program runs).
  dev_url: https://github.com/llvm/llvm-project
  doc_url: https://llvm.org/docs/

extra:
  recipe-maintainers:
    - inducer
    - jakirkham
    - mingwandroid
    - SylvainCorlay
    - isuruf
    - timsnyder
    - xhochy
    - h-vetinari
